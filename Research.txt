
Before you start coding, look up the answers the following questions
and place them inline below:

1. What are some books that Martin Fowler has written?
1996. Analysis Patterns: Reusable Object Models. Addison-Wesley. ISBN 0-201-89542-0.
1997. UML Distilled: A Brief Guide to the Standard Object Modeling Language.
1999. Refactoring: Improving the Design of Existing Code, With Kent Beck, John Brant, William Opdyke, and Don Roberts (June 1999). Addison-Wesley. ISBN 0-201-48567-2.
2000. Planning Extreme Programming. With Kent Beck. Addison-Wesley. ISBN 0-201-71091-9.
2002. Patterns of Enterprise Application Architecture. With David Rice, Matthew Foemmel, Edward Hieatt, Robert Mee, and Randy Stafford. Addison-Wesley. ISBN 0-321-12742-0.
2010. Domain-Specific Languages. With Rebecca Parsons. Addison-Wesley. ISBN 978-0-321-71294-3.
2012. NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence. With Pramod Sadalage. Addison-Wesley. ISBN 978-0-321-82662-6.
2013. Refactoring: Ruby Edition. With Kent Beck, Shane Harvie, and Jay Fields. Addison-Wesley. ISBN 978-0-321-98413-5.


2. What's the difference between "active record" and "ActiveRecord"?
active record - Is an architectual pattern found in software that stores in-memory   object data in relational databases
ActiveRecord - is a ruby gem that maps database tables to Ruby classes.

3. Is the "active record" pattern an ORM?
Yes - Object Relational Mapping

4. Why might we want to use an ORM in our code?
Allows an engineer to translate the logical representation of an object into an atomized form that is capable of being stored in a database, while preserving the propreties of objects and their relationships so that they can be retrieved as objects when needed. 

5. What gem do we need to allow Sinatra to interact with ActiveRecord?
sinatra-activerecord

6. What is `rake`?
Rake is a build tool you can use with Ruby projects. It allows you to use ruby code to define "tasks" that can be run in the command line. It's called a "build tool" because Rake comes with some libraries that make it easy to do tasks that are common during the build/deploy process, like file operations (creating, deleting, renaming, & moving files), publishing sites via FTP/SSH, and running tests.

7. What is a database migration?
Process of transfering data between storage types (in this case databases).

8. What command can we use to create a new ActiveRecord migration?
rake db:create_migration

9. What command runs our existing migrations?
rake db:migrate

10. What commands reverses a migration?
rake db:rollback

11. What command tells us which migrations have run and which have not?
rake db:migrate:status

12. Which class do we have to extend if we want to create a new model? 
ActiveRecord::Base

13. What's the difference between ActiveRecord's `.new` and `.create` methods?
.new - instantiates a new object but does not save the object in the database
.create - instatiates a new object and saves said object to the database
.create - 
14. What's the difference between ActiveRecord's `.find` and
`.find_by` methods?
.find - can only retrieve data by primary key value
.find_by - can retire objcets by field specifiefd. 
example: Client.find_by first_name: 'Lifo'
# => #<Client id: 1, first_name: "Lifo">
15. What's the difference between ActiveRecord's `.find_by` and
`.where` methods?
Appears just to be syntax to perform the same tasks.
example here:
Client.find_by first_name: 'Lifo'
# => #<Client id: 1, first_name: "Lifo">
 Client.find_by first_name: 'Jon'
# => nil
It is equivalent to writing:
Client.where(first_name: 'Lifo').take

16. What ActiveRecord method do we use to change a value in the
database?
.update

17. What ActiveRecord method do we use to remove an item from the database?
.destroy